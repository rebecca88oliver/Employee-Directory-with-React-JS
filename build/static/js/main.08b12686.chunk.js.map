{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","components/SearchTable/SearchTable.js","App.js","serviceWorker.js","index.js"],"names":["Header","title","subtitle","displayError","useState","showError","setShowError","className","data-testid","onClick","hidden","Search","value","onValueChange","Form","onSubmit","e","preventDefault","Row","Col","Control","type","placeholder","onChange","target","SearchTable","data","asc","sort","Table","length","OverlayTrigger","placement","overlay","Tooltip","id","icon","faArrowDown","size","faArrowUp","map","user","i","key","Image","thumbnail","src","picture","name","first","last","phone","email","Date","dob","date","toLocaleDateString","App","filteredUsers","setFilteredUsers","allUsers","setAllUsers","sortAsc","setSortAsc","sortUsers","users","a","b","fullNameLowerCase","localeCompare","reverse","toLocaleLowerCase","loadUsersFromApi","config","method","url","axios","then","res","results","catch","error","console","log","useEffect","Container","fluid","search","searchLowerCase","filter","u","includes","filterUsersbyName","order","sortFilteredUsersByName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.08b12686.chunk.js","sourcesContent":["\n//requirements \nimport React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./style.css\";\n\n//header HTML\nconst Header = ({ title, subtitle, displayError = false }) => {\n\tconst [showError, setShowError] = useState(displayError);\n\n\treturn (\n\t\t<div className=\"p-3 custom-style\" data-testid=\"header\">\n\t\t\t<h1\n\t\t\t\tdata-testid=\"header-title\"\n\t\t\t\tclassName=\"text-white\"\n\t\t\t\tonClick={() => setShowError(!showError)}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</h1>\n\t\t\t<h4 data-testid=\"header-subtitle\" className=\"text-white text-muted\">\n\t\t\t\t{subtitle}\n\t\t\t</h4>\n\t\t\t<p data-testid=\"header-error\" hidden={!showError}>\n\t\t\t\tThis is an error\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\n//exports the page\nexport default Header;\n","//dependencies \nimport React from \"react\";\nimport { Form, Col } from \"react-bootstrap\";\nimport \"./style.css\";\n\n//HTML of search section\nconst Search = ({ value, onValueChange }) => {\n\treturn (\n\t\t<Form className=\"bg-light\" onSubmit={(e) => e.preventDefault()}>\n\t\t\t<Form.Row>\n\t\t\t\t<Col className=\"col-lg-4 col-sm-12 m-auto p-4 \">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tdata-testid=\"search-name-field\"\n\t\t\t\t\t\tplaceholder=\"Search Employee by Name\"\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tonValueChange(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Form.Row>\n\t\t</Form>\n\t);\n};\n\nexport default Search;\n","//dependencies\nimport React from \"react\";\nimport { Table, Image, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport \"./style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\n\n//HTML for search\nconst SearchTable = ({ data, asc, sort }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Table className=\"table responsive table-striped table-bordered table-sm\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"custom-style-table-text\">Image</th>\n\t\t\t\t\t\t<th className=\"custom-style-table-text\" onClick={sort}>\n\t\t\t\t\t\t\tName{\" \"}\n\t\t\t\t\t\t\t{data.length && asc ? (\n\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\t\t\t\toverlay={<Tooltip id=\"tooltip-asc\">Asc</Tooltip>}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faArrowDown} size=\"sm\" />\n\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t) : data.length ? (\n\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\t\t\t\toverlay={<Tooltip id=\"tooltip-desc\">Desc</Tooltip>}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faArrowUp} size=\"sm\" />\n\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th className=\"custom-style-table-text\">Phone</th>\n\t\t\t\t\t\t<th className=\"custom-style-table-text\">Email</th>\n\t\t\t\t\t\t<th className=\"custom-style-table-text\">DBO</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{data.length ? (\n\t\t\t\t\t\tdata.map((user, i) => (\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Image thumbnail src={user.picture.thumbnail} />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div className=\"text-custom-color\">\n\t\t\t\t\t\t\t\t\t\t{user.name.first + \" \" + user.name.last}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div className=\"text-custom-color\">{user.phone}</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div className=\"text-custom-color\">{user.email}</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<div className=\"text-custom-color\">\n\t\t\t\t\t\t\t\t\t\t{new Date(user.dob.date).toLocaleDateString()}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span className=\"text-muted\">no user image result</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span className=\"text-muted\">no user name result</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span className=\"text-muted\">no user phone result</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span className=\"text-muted\">no user email result</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span className=\"text-muted\">no user dbo result</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</div>\n\t);\n};\n\n//exports page\nexport default SearchTable;\n","//imports\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport SearchTable from \"./components/SearchTable/SearchTable\";\nimport axios from \"axios\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n\n//Determines app state\nconst App = () => {\n\tconst [filteredUsers, setFilteredUsers] = useState([]);\n\tconst [allUsers, setAllUsers] = useState([]);\n\tconst [sortAsc, setSortAsc] = useState(true);\n\n\t//Function to sort user array\n\tconst sortUsers = (users, asc) => {\n\t\tusers.sort((a, b) =>\n\t\t\tfullNameLowerCase(a).localeCompare(fullNameLowerCase(b))\n\t\t);\n\t\tif (!asc) users.reverse();\n\t\treturn users;\n\t};\n\n\t//funtion to return users by name\n\tconst fullNameLowerCase = (user) =>\n\t\t(user.name.first + \" \" + user.name.last).toLocaleLowerCase();\n\n\t// Loads users from \"randomuser\" API \n\tconst loadUsersFromApi = async () => {\n\t\tvar config = {\n\t\t\tmethod: \"get\",\n\t\t\turl: `https://randomuser.me/api/?results=200&nat=us`,\n\t\t};\n\n\t\tawait axios(config)\n\t\t\t.then(function (res) {\n\t\t\t\tlet users = res.data.results;\n\t\t\t\tusers = sortUsers(users, sortAsc);\n\t\t\t\tsetFilteredUsers(users);\n\t\t\t\tsetAllUsers(users);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\t// Filters users by name \n\tconst filterUsersbyName = (search) => {\n\t\t// convert to lowercase for faster search \n\t\tconst searchLowerCase = search.toLocaleLowerCase();\n\t\t// filters out users who meet the search\n\t\tlet filteredUsers = allUsers.filter((u) =>\n\t\t\tfullNameLowerCase(u).includes(searchLowerCase)\n\t\t);\n\t\tsetFilteredUsers(sortUsers(filteredUsers, sortAsc));\n\t};\n\t\t// sorts returned users in alphabetical order\n\tconst sortFilteredUsersByName = () => {\n\t\tlet order = !sortAsc;\n\t\tsetSortAsc(order);\n\t\tsetFilteredUsers(sortUsers(filteredUsers, order));\n\t};\n\t\t//loads the list\n\tuseEffect(() => {\n\t\tloadUsersFromApi();\n\t}, []);\n\n\t//HTML outline\n\treturn (\n\t\t<Container fluid className=\"App p-0\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Header\n\t\t\t\t\t\ttitle=\"Employee Directory\"\n\t\t\t\t\t\tsubtitle=\"Type a name in the search bar!\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tname=\"\"\n\t\t\t\t\t\tonValueChange={(search) => filterUsersbyName(search)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SearchTable\n\t\t\t\t\t\tasc={sortAsc}\n\t\t\t\t\t\tdata={filteredUsers}\n\t\t\t\t\t\tsort={() => sortFilteredUsersByName()}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n//exports the app\nexport default App;\n","\n\n\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//requirements\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//Renders the app\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//Service worker\nserviceWorker.unregister();\n"],"sourceRoot":""}